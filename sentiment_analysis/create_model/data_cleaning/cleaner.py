import pandas as pdimport csv, os.pathdef read_data(file_path, train_data_path, train100_data_path):    print('Reading data...')    df = pd.read_csv(file_path, dtype='unicode')    df_tuple = list();        # toxic = 2, negative = 1    for data in df.iterrows():        text = data[1][1]                if (int(data[1][2]) + int(data[1][3])) >= 1:            # classify data as toxic            df_tuple.append([text, 2])        elif (int(data[1][4]) + int(data[1][5]) + int(data[1][6]) + int(data[1][7])) >= 1:            # classify data as negative            df_tuple.append([text, 1])        else:            # classify data as non toxic or negative            df_tuple.append([text, 0])                # save data    if check_csv(train_data_path):        write_csv(df_tuple, train_data_path)    else:        initiate_csv(train_data_path)        write_csv(df_tuple, train_data_path)            write_1000csv(df_tuple, train100_data_path)    def write_csv(data, train_data_path):    print('Writing Data...')    with open(train_data_path,'a') as out:        csv_out = csv.writer(out)        for row in data:            csv_out.writerow(row)def write_1000csv(data, train1000_data_path):    if check_csv(train1000_data_path):        print('Writing 1000 data...')        counter = 0        with open(train1000_data_path,'a') as out:            csv_out = csv.writer(out)            for row in data:                csv_out.writerow(row)                                counter += 1                if counter == 1000:                    break    else:        initiate_csv(train1000_data_path)        write_1000csv(data, train1000_data_path)        def write_n_csv(train_data_path, number_of_row):    initiate_csv(train_data_path)    if check_csv(train_data_path):        counter = 0        df = pd.read_csv('data_training/clean_data.csv')        with open('data_training/clean_data.csv','a') as out:            csv_out = csv.writer(out)            for i, row in df.iterrows():                print(row['text'])                csv_out.writerow()                                counter += 1                if counter == number_of_row:                    break    else:        initiate_csv(train_data_path)        write_n_csv(train_data_path, number_of_row)def check_csv(train_data_path):    return os.path.isfile(train_data_path)def initiate_csv(train_data_path):    print('Train data is not found, creating a new one.')    with open(train_data_path,'w') as out:        csv_out = csv.writer(out)        csv_out.writerow(['text','sentiment'])def init():    train_data_path = ('data_training/clean_data.csv')    train1000_data_path = ('data_training/clean_data1000.csv')        paths = ('raw_data/dataset-1.csv', 'raw_data/dataset-2.csv', 'raw_data/dataset-3.csv')    read_data(paths[0], train_data_path, train1000_data_path)    print('\nFinished!')    init()